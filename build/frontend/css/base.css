@font-face
{
    font-family: 'Roboto-Regular';
    font-weight: normal;
    font-style: normal;

    src: url('../fonts/Roboto-Regular.woff') format('woff'), url('../fonts/Roboto-Regular.eot') format('embedded-opentype'), url('../fonts/Roboto-Regular.ttf') format('truetype');
}

@font-face
{
    font-family: 'Roboto-Medium';
    font-weight: normal;
    font-style: normal;

    src: url('../fonts/Roboto-Medium.woff') format('woff'), url('../fonts/Roboto-Medium.eot') format('embedded-opentype'), url('../fonts/Roboto-Medium.ttf') format('truetype');
}

@font-face
{
    font-family: 'Roboto-LightItalic';
    font-weight: normal;
    font-style: normal;

    src: url('../fonts/Roboto-LightItalic.woff') format('woff'), url('../fonts/Roboto-LightItalic.eot') format('embedded-opentype'), url('../fonts/Roboto-LightItalic.ttf') format('truetype');
}

*
{
    font: inherit;

    box-sizing: border-box;
    margin: 0;
    padding: 0;

    will-change: all;
}

*:before,
*:after
{
    box-sizing: border-box;

    will-change: all;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary
{
    display: block;
}

audio,
canvas,
progress,
video
{
    display: inline-block;

    vertical-align: baseline;
}

audio:not([controls])
{
    display: none;

    height: 0;
}

[hidden],
template
{
    display: none;
}

html
{
    font-family: sans-serif;

        -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-focus-ring-color: rgba(255,255,255,0);
}

body
{
    font-size: 100%;
    line-height: 1;

    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

a
{
    background: transparent;
}

*:focus,
*:active,
*:hover
{
    outline: 0;
}

hr
{
    box-sizing: content-box;
    height: 0;
}

ol,
ul
{
    list-style: none;
}

pre
{
    white-space: pre-wrap;
    -moz-tab-size: 4;
         tab-size: 4;
}

q
{
    quotes: '\201C' '\201D' '\2018' '\2019';
}

img
{
    border: 0;
}

svg:not(:root)
{
    overflow: hidden;
}

button,
input
{
    line-height: normal;
}

button,
select
{
    text-transform: none;
}

button
{
    overflow: visible;
}

button,
html input[type='button'],
input[type='reset'],
input[type='submit']
{
    cursor: pointer;

    -webkit-appearance: button;
}

button[disabled],
html input[disabled]
{
    cursor: default;
}

input[type='checkbox'],
input[type='radio']
{
    box-sizing: border-box;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button
{
    height: auto;
}

input[type='search'],
input[type='email'],
input[type='password'],
input[type='text'],
input[type='phone']
{
    box-sizing: border-box;

    -webkit-appearance: none;
}

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration
{
    -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner
{
    padding: 0;

    border: 0;
}

textarea
{
    overflow: auto;

    vertical-align: top;
}

button,
input,
select[multiple],
textarea
{
    background-image: none;
}

input,
select,
textarea
{
    border-radius: 0;
    box-shadow: none;
}

input,
textarea
{
    resize: none;
    -webkit-user-select: text;
        -ms-user-select: text;
            user-select: text;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

.mainScreen
{
    background-image: url('../images/main-page/main-img.jpg');
}

.header
{
    position: absolute;

    width: 100%;
}

.header__wrapp
{
    position: relative;

    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;

    padding-right: 60px;
    padding-left: 60px;

    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
            justify-content: space-between;
}

.navWrapper
{
    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;

    margin-top: 20px;

    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
            justify-content: flex-end;
    -webkit-box-align: center;
    -webkit-align-items: center;
            align-items: center;
}

.logoBlock
{
    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;

    -webkit-box-align: center;
    -webkit-align-items: center;
            align-items: center;
}

.logoBlock__logo
{
    margin-right: 19px;
}

.logoBlock__link
{
    text-decoration: none;

    color: #fff;
}

.logoBlock__desc
{
    font-family: Roboto-LightItalic, sans-serif;
    font-size: 14px;

    margin-top: 5px;

    color: #fff;
}

.nav
{
    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;
}

.nav__item
{
    margin-right: 40px;

    text-decoration: none;
}

.nav__link
{
    font-family: Roboto-Regular, sans-serif;
    font-size: 20px;

    text-decoration: none;

    color: #fff;
}

#nav
{
    position: absolute;
    top: 45px;

    overflow: hidden;

    width: 100%;
    height: 0;
    max-height: 0;
    padding-left: 0;

    list-style-type: none;

    -webkit-transition: linear 1s;
            transition: linear 1s;

    background: #fff;
    box-shadow: 0 4px 4px rgba(169,169,169,.25);
}

#nav.open
{
    height: auto;
    max-height: 100%;

    -webkit-transition: linear 1s;
            transition: linear 1s;
}

#nav li
{
    float: none;

    width: 100%;
    margin: 0;

    -webkit-transition: linear 1s;
            transition: linear 1s;
    text-align: center;
    text-decoration: none;
}

#nav li a
{
    font-family: Roboto-Regular, sans-serif;

    display: block;

    margin: 0;
    padding: 10px;

    -webkit-transition: linear 1s;
            transition: linear 1s;

    color: #3b3b3b;
}

.mobile-nav__link
{
    font-size: 20px;

    text-decoration: none;
}

#contain
{
    position: absolute;
    top: 2px;
    right: 0;

    display: none;

    cursor: pointer;
}

.bar1,
.bar2,
.bar3
{
    width: 35px;
    height: 5px;
    margin: 6px 0;

    -webkit-transition: .2s;
            transition: .2s;

    background-color: #3f3f3f;
}

.change .bar1
{
    -webkit-transform: rotate(-45deg) translate(-9px, 6px);
            transform: rotate(-45deg) translate(-9px, 6px);
}

.change .bar2
{
    opacity: 0;
}

.change .bar3
{
    -webkit-transform: rotate(45deg) translate(-8px, -8px);
            transform: rotate(45deg) translate(-8px, -8px);
}

.hover .bar1
{
    background-color: #f00;
}

.hover .bar2
{
    background-color: #f00;
}

.hover .bar3
{
    background-color: #f00;
}

.mainScreen
{
    height: 100vh;

    background-size: cover;
}

@media screen and (max-width: 1400px)
{
    .navWrapper
    {
        margin-right: 50px;
    }

    .nav
    {
        -webkit-justify-content: space-around;
                justify-content: space-around;
    }
}

@media screen and (max-width: 960px)
{
    .nav
    {
        display: none;
    }

    .nav
    {
        margin-left: 0;
    }
}

@media screen and (max-width: 768px)
{
    #contain
    {
        display: inline-block;
    }
}

@media screen and (max-width: 480px)
{
    .navWrapper
    {
        -webkit-box-pack: start;
        -webkit-justify-content: flex-start;
                justify-content: flex-start;
    }

    .navWrapper
    {
        margin-top: 0;
    }

    #contain
    {
        display: inline-block;
    }

    #contain
    {
        right: 10px;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
